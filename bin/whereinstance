#!/usr/bin/env python3
import argparse
import json
from typing import List
import urllib.request

API_VERSION = 'v2.3'
SERVER_INFO_URL = "https://{instance_name}.{domain_name}/api/{api_version}/public/server-info/"
ENV_DEV = 'dev'
ENV_STAGE = 'stage'
ENV_PROD = 'prod'

domains = {
    ENV_DEV: 'poka.dev',
    ENV_STAGE: 'poka.works',
    ENV_PROD: 'poka.io',
}


def retrvie_information(instance_name: str, environment: int) -> List[str]:
    url = SERVER_INFO_URL.format(
        instance_name=instance_name,
        domain_name=domains[environment],
        api_version=API_VERSION,
    )

    try:
        with urllib.request.urlopen(url) as response:
            data = json.loads(response.read())
            region = data.get("ld_context", {}).get('instance_region', 'Unkown')
            instance_id = data.get("ld_context", {}).get('instance_id', instance_name)
    except urllib.error.URLError:
        print(f'Instance "{instance_name}" not found.')
        exit(1)

    info_builder = []
    info_builder.append(f"Instance .... : {instance_id}")
    if instance_name != instance_id:
        info_builder.append(f"Tenant ...... : {data.get('tenant_code')}")
    else:
        info_builder.append("Tenant ...... : Single Tenant")
    info_builder.append(f"Region ...... : {region}")
    info_builder.append(f"Version ..... : {data.get('backend_version', 'n/a')}")

    return info_builder


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Find an instance's AWS region.")
    parser.add_argument('-e', '--env')

    parser.add_argument('-d', '--dev', dest='env', action='store_const', const=ENV_DEV)
    parser.add_argument('-s', '--stage', dest='env', action='store_const', const=ENV_STAGE)
    parser.add_argument('-p', '--prod', dest='env', action='store_const', const=ENV_PROD)

    parser.add_argument("name", type=str, help="The instance name")

args = parser.parse_args()
instance_name = args.name
env = args.env

if not env:
    env = ENV_PROD

if information := retrvie_information(instance_name=instance_name, environment=env):
    print('\n'.join(information))
